import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner scn = new Scanner(System.in);
        int r = scn.nextInt();
        int c= scn.nextInt();
        
         
        int sr = 0;
        int sc = 0;
        int dr = r-1;
        int dc = c-1;
        
        ArrayList<String> ans = getMazePaths(sr , sc , dr , dc);
        System.out.println(ans);

    }

    // sr - source row
    // sc - source column
    // dr - destination row
    // dc - destination column
    
    public static ArrayList<String> getMazePaths(int sr, int sc, int dr, int dc) {
        if(sr==dr && sc == dc){ // reached destination
            ArrayList<String> base_ans = new ArrayList<>();
            base_ans.add("");
            return base_ans;
        }
        
        if(sr > dr || sc > dc){ // out of maze condition
            ArrayList<String> base_ans = new ArrayList<>();
              return base_ans;
        }
        
        ArrayList<String> hcall_ans = getMazePaths(sr , sc+1,dr,dc); // horizontal call from 0,1 to destination   , hcall_ans =  answer from horizontal call
        
         ArrayList<String> vcall_ans = getMazePaths(sr+1 , sc,dr,dc);  // vertical call from 1,0 to destination     , vcall_ans =  answer from vertical call  
         
         ArrayList<String> paths = new ArrayList<>();
         
         for(int i=0 ; i< hcall_ans.size() ; i++){
             paths.add('h' + hcall_ans.get(i)); // will give src to dest path
         }
        
        for(int i=0 ; i< vcall_ans.size() ; i++){
             paths.add('v' + vcall_ans.get(i)); // will give src to dest path
         }
         return paths;
    }

}
